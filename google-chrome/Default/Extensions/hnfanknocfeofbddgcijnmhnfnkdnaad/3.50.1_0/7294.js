"use strict";(self.webpackChunkcb_wallet_extension=self.webpackChunkcb_wallet_extension||[]).push([[7294],{443862:function(e,t,n){var a=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.useCoinbasePay=void 0;const o=n(202784),r=n(109238),s=n(656695),i=n(983488),c=a(n(334291)),d=n(331151),u=n(524264);t.useCoinbasePay=function({destinationWallets:e,onEvent:t,onSuccess:n,onExit:a,onReady:p,closeOnExit:l=!0,closeOnSuccess:g,experienceLoggedOut:m="embedded",experienceLoggedIn:f="embedded",defaultNetwork:y,amount:w="0",isEmbeddedCBPay:b}){const T=(0,o.useRef)({open:c.default,destroy:c.default});return(0,s.useOnMount)((function(){if(!b||!e){const t=(0,i.generateOnrampURL)({destinationWallets:e,amount:w,appId:u.CBPAY_ID,defaultNetwork:y});return T.current={open:()=>window.open(t,"_blank"),destroy:()=>{T.current={open:c.default,destroy:c.default}}},p?.()}return T.current=(0,d.initOnramp)({appId:u.CBPAY_ID,widgetParameters:{destinationWallets:e,defaultNetwork:y},closeOnExit:l,closeOnSuccess:g,experienceLoggedOut:m,experienceLoggedIn:f,embeddedContentStyles:{target:"#cbpay-iframe-container",height:"100%",position:"absolute"},onEvent:e=>{(0,r.triggerCBPayEventStream)({CBPayEventName:e.eventName}),t?.(e)},onExit:a,onSuccess:n,onReady:p}),()=>{T.current?.destroy()}})),T}},589683:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.useLogBuyErrorViewed=t.useLogBuyEntryViewed=t.triggerGuestCheckoutPaymentLinkSuccess=t.triggerGuestCheckoutPaymentLinkClose=t.triggerGuestCheckoutPaymentLinkOpen=t.trigger3DSFlowReturned=t.trigger3DSFlowRedirected=t.triggerVerificationModalViewed=t.triggerDefaultToOneClickBuyAnalytics=t.logPostMessageFromUnauthorizedOrigin=t.logWebViewNavigation=t.triggerCBPayEventStream=void 0;const a=n(395545),o=n(160593);function r(e){return e.split("?")[0]}t.triggerCBPayEventStream=function(e){(0,o.logEvent)("onboarding.cbpay.stream",{loggingId:"3b1d4d1b-ab4a-445b-af1b-b8aec1f399e8",action:a.ActionType.unknown,componentType:a.ComponentType.modal,...e})},t.logWebViewNavigation=function(e){(0,o.logEvent)("onramp_psps.web_view.navigation",{loggingId:"7388017f-42b8-4235-8020-3a10d6f55668",componentType:a.ComponentType.page,action:a.ActionType.view,...e,url:e?.url&&r(e.url),mainDocumentURL:e?.mainDocumentURL&&r(e.mainDocumentURL)})},t.logPostMessageFromUnauthorizedOrigin=function(e){return(0,o.logEvent)("onramp_psps.web_view.post_message_unauthorized_origin",{loggingId:"72ccd193-67e0-4418-abe5-8d95cb24e0ed",componentType:a.ComponentType.page,action:a.ActionType.unknown,...e})},t.triggerDefaultToOneClickBuyAnalytics=function(e){(0,o.logEvent)("buy.defaultToOneClickBuy",{loggingId:"c4cb7c9b-be41-4646-8b6b-e7dda26c5166",action:a.ActionType.process,componentType:a.ComponentType.button,flow:e})},t.triggerVerificationModalViewed=function(e){(0,o.logEvent)("buy.verification_modal.viewed",{loggingId:"7f278090-7bf8-4422-ae61-13099360985d",action:a.ActionType.view,componentType:a.ComponentType.modal,isAppToAppAvailable:e})},t.trigger3DSFlowRedirected=function(e){(0,o.logEvent)("buy.3ds_challenge_flow.redirected",{loggingId:"6b894648-0841-48fd-91b2-ce65a9ce166b",action:a.ActionType.process,componentType:a.ComponentType.unknown,url:e})},t.trigger3DSFlowReturned=function(e){(0,o.logEvent)("buy.3ds_challenge_flow.returned",{loggingId:"113a4026-1199-454d-8aef-d34d186ebc65",action:a.ActionType.process,componentType:a.ComponentType.unknown,url:e})},t.triggerGuestCheckoutPaymentLinkOpen=function(e){(0,o.logEvent)("buy.guest_payment_link.open",{loggingId:"e7ba6683-0522-45a2-8278-bf896846c360",action:a.ActionType.process,componentType:a.ComponentType.unknown,url:e})},t.triggerGuestCheckoutPaymentLinkClose=function(){(0,o.logEvent)("buy.guest_payment_link.close",{loggingId:"02da9b9b-480e-42f1-8ce7-1c2f469e4a66",action:a.ActionType.process,componentType:a.ComponentType.unknown})},t.triggerGuestCheckoutPaymentLinkSuccess=function(){(0,o.logEvent)("buy.guest_payment_link.success",{loggingId:"1d7c75c0-756e-45cc-b05b-6db2867453fc",action:a.ActionType.process,componentType:a.ComponentType.unknown})},t.useLogBuyEntryViewed=function(){(0,o.useLogEventOnMount)("buy.entry.viewed",{loggingId:"77a682e7-a706-4243-80e7-2b4a8d0b090f",componentType:a.ComponentType.page,action:a.ActionType.render})},t.useLogBuyErrorViewed=function({errorTitle:e,errorMessage:t,shouldShowOpenCoinbase:n}){(0,o.useLogEventOnMount)("buy.error.viewed",{loggingId:"9e84a2d6-3917-4e21-a508-70527d115c6b",componentType:a.ComponentType.page,action:a.ActionType.render,errorTitle:e,errorMessage:t,shouldShowOpenCoinbase:n})}},109238:function(e,t,n){var a=this&&this.__createBinding||(Object.create?function(e,t,n,a){void 0===a&&(a=n);var o=Object.getOwnPropertyDescriptor(t,n);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[n]}}),Object.defineProperty(e,a,o)}:function(e,t,n,a){void 0===a&&(a=n),e[a]=t[n]}),o=this&&this.__exportStar||function(e,t){for(var n in e)"default"===n||Object.prototype.hasOwnProperty.call(t,n)||a(t,e,n)};Object.defineProperty(t,"__esModule",{value:!0}),o(n(589683),t)},813003:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.useDestinationWallets=void 0;const a=n(575853);t.useDestinationWallets=function(e){const{include:t}=e,n=(0,a.usePrimaryReceiveAddresses)(),o=Array.from(n).map((([e,{address:t}])=>({address:t,blockchains:[e]})));return t?.blockchains&&o.find((e=>e.blockchains.includes(t.shared)))?.blockchains.push(...t.blockchains.map((e=>e))),o}},964337:(e,t,n)=>{var a=n(348834).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.generateUnsignedSwapTx=void 0;const o=n(4871),r=n(581823),s=n(266854),i=n(497088),c=n(178012),d=n(763353);t.generateUnsignedSwapTx=async function(e,t,n,u){const p=(0,i.buildMetadataWithTarget)({baseMetadata:d.swapMetadata,imageURL:t.quote.toAsset.imageURL,name:t.quote.toAsset.name,currencyCode:t.quote.toAsset.currencyCode.rawValue,decimals:t.quote.toAsset.decimals,amount:t.quote.toAmount});if(u){const r=t.tx,i=r.value?BigInt(r.value):0n,d=r.gas?BigInt(r.gas):void 0,u=await(0,s.get1559GasPrice)(Number(t.chainId));return(0,o.generateUnsigned1559Transaction)({wallet:e,recipientAddress:r.to,transactionAmount:{kind:"Amount",value:i},txConfiguration:{txType:"1559",nonce:n,dataBuffer:a.from((0,c.strip0x)(r.data??""),"hex"),selectedMaxFeePerGas:BigInt(u.normalMaxFeePerGas),selectedMaxPriorityFeePerGas:BigInt(u.normalPriorityFee),selectedGasLimit:d,selectedBaseFeePerGas:BigInt(u.baseFee)},metadata:p})}return(0,r.generateUnsignedLegacyTransaction)({wallet:e,recipientAddress:t.tx.to,metadata:p,transactionAmount:{kind:"Amount",value:BigInt(t.tx.value)},txConfiguration:{txType:"Legacy",nonce:n,dataBuffer:t.swapHexEncodedTxData,selectedGasPrice:BigInt(t.tx.gasPrice),selectedGasLimit:BigInt(t.tx.gas)}})}},117399:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getEVMSwapTrade=void 0;const a=n(103184),o=n(86296),r=n(402330),s=n(49982),i=n(763353),c=n(738977),d=n(781399),u=n(964337);t.getEVMSwapTrade=async function({wallet:e,feeWallet:t,network:n,address:p,sourceAsset:l,targetAsset:g,cryptoAmount:m,is1559Enabled:f,source:y="extension",swapFeeBasis:w,slippage:b,exchange:T,apiVersion:v}){const h={fromAddress:p,from:l.address?.rawValue??l.currencyCode.rawValue,to:g.address?.rawValue??g.currencyCode.rawValue,amount:m.toString(),amountReference:d.AmountBase.Source,chainId:l.chainId.toString(),source:y,...b&&{slippagePercentage:b},...T&&{exchange:T}},{result:S}=await(0,s.getJSON)("swap/trade",h,{apiVersion:v,additionalHeaders:{"X-Swap-Fee-Basis-Type":w}}),A=new c.EVMSwapTrade(S,BigInt(h.chainId)),P=await(0,a.getConfirmedEthereumTransactionCount)(p,n);let _,k=P;A.approveTx&&(_=await(0,r.generateUnsignedApproveTx)(t,A.approveTx,P,f,i.swapMetadata),k=P+1n);const x=await(0,u.generateUnsignedSwapTx)(e,A,k,f);return"zerofee"===w&&"0"!==S.fee.amount&&"0"!==S.fee.percentage&&(0,o.cbReportError)({context:"swap",error:new Error(`zeroFee basis returned non-zero fees: ${S.fee.amount} & ${S.fee.percentage}`),isHandled:!1,severity:"error"}),"Failure"===_?.kind&&((0,o.cbReportError)({context:"swap",error:new Error(`error building approveTx: ${_.err}`),isHandled:!1,severity:"error"}),Object.assign(_.transaction,{gasLimit:A.approveTx?.gas?BigInt(A.approveTx?.gas):void 0})),"Failure"===x?.kind&&((0,o.cbReportError)({context:"swap",error:new Error(`error building swapTx: ${x.err}`),isHandled:!1,severity:"error"}),Object.assign(x.transaction,{gasLimit:BigInt(A.tx.gas)})),{swapTrade:A,approveTx:_,swapTx:x,swapTxs:[]}}},357891:(e,t,n)=>{var a=n(348834).Buffer;Object.defineProperty(t,"__esModule",{value:!0}),t.getSolanaSwapTrade=void 0;const o=n(935265),r=n(171484),s=n(79596),i=n(49982),c=n(763353),d=n(409539),u=n(781399),p={skipPreflight:!0};function l(e){if(!e)return"";const t=(0,s.decodeInstructions)(e.instructions).filter((e=>"Transfer"===e.instructionType));if(0===t.length)return"";const{instructionParams:n}=t[0];return n.filter((e=>"to"===e.paramKey))[0].paramValue}t.getSolanaSwapTrade=async function({wallet:e,address:t,sourceAsset:n,targetAsset:s,cryptoAmount:g,source:m="extension",swapFeeBasis:f,slippage:y,apiVersion:w}){const b={fromAddress:t,from:n.address?.rawValue??n.currencyCode.rawValue,to:s.address?.rawValue??s.currencyCode.rawValue,amount:g.toString(),amountReference:u.AmountBase.Source,chainId:n.chainId.toString(),source:m,directRoute:"false",...y&&{slippagePercentage:y}},{result:T}=await(0,i.getJSON)("swap/trade",b,{apiVersion:w,additionalHeaders:{"X-Swap-Fee-Basis-Type":f}}),v=new d.SolanaSwapTrade(T,BigInt(b.chainId)),{tx:h,cleanupTransaction:S,setupTransaction:A}=T,{swapTransaction:P}=h;let _,k,x;const E=[];A.transaction&&(k=o.Transaction.from(a.from(A.transaction,"base64")),_=await(0,r.generateUnsignedTransactionFromDapp)({wallet:e,nativeDappTransaction:k,metadata:(0,c.getSolanaSwapMetadata)("setup"),recipientAddress:"",transactionAmount:{kind:"Amount",value:0n},submissionParams:p}),E.push(_));const I=o.Transaction.from(a.from(P,"base64")),O=l(I)||l(k),C=await(0,r.generateUnsignedTransactionFromDapp)({wallet:e,nativeDappTransaction:I,metadata:(0,c.getSolanaSwapMetadata)("swap"),recipientAddress:O,transactionAmount:{kind:"Amount",value:g},shouldSavePendingTransaction:!0,submissionParams:p});if(E.push(C),S.transaction){const t=o.Transaction.from(a.from(S.transaction,"base64"));x=await(0,r.generateUnsignedTransactionFromDapp)({wallet:e,nativeDappTransaction:t,metadata:(0,c.getSolanaSwapMetadata)("cleanup"),recipientAddress:"",transactionAmount:{kind:"Amount",value:0n},submissionParams:p}),E.push(x)}return{swapTrade:v,approveTx:void 0,swapTx:C,swapTxs:E}}},278292:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.usePaginatedSwapAssets=t.fetchSwapAssets=t.SWAP_ASSETS_QUERY_KEY=void 0;const a=n(946813),o=n(86296),r=n(49982);t.SWAP_ASSETS_QUERY_KEY="swap/assets";const s="2";async function i({chainId:e,search:n,limit:a,page:o}){try{return await(0,r.getJSON)(t.SWAP_ASSETS_QUERY_KEY,{...void 0!==e&&{chainId:e},...void 0!==n&&{search:n},...void 0!==a&&{limit:a.toString()},...void 0!==o&&{page:o.toString()},version:s},{apiVersion:1})}catch(e){return Promise.resolve({result:[]})}}t.fetchSwapAssets=i,t.usePaginatedSwapAssets=function({chainId:e,search:n,limit:r,page:s}){const c={method:"usePaginatedSwapAssets "};return(0,a.useInfiniteQuery)([t.SWAP_ASSETS_QUERY_KEY,e,n,r,s],(async({pageParam:t=s})=>i({chainId:e,search:n,limit:r,page:t})),{keepPreviousData:!0,getNextPageParam:function(e){return!!e?.result.length&&e.nextPage},onError:e=>{(0,o.cbReportError)({error:e,...c,context:"swap",severity:"error",isHandled:!1})}})}},409539:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SolanaSwapTrade=void 0;const a=n(57356),o=n(865879),r=n(751624);class s extends r.SwapTrade{constructor(e,t){super(e,t),this.tx=e.tx,this.quote=new o.SwapQuote(e.quote),this.fee={amount:BigInt(e.fee.amount),percentage:e.fee.percentage,baseAsset:new a.SwapAsset(e.fee.baseAsset),extraFee:e.ata.rent?BigInt(e.ata.rent):void 0},this.chainId=t}}t.SolanaSwapTrade=s},983488:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.generateOnrampURL=void 0,t.generateOnrampURL=function({destinationWallets:e,paymentMethodsSupported:t=[],host:n="https://pay.coinbase.com",amount:a,appId:o,defaultNetwork:r}){if(!e)return"https://www.coinbase.com/";const s=new URL(n);return s.pathname="/buy/select-asset",s.searchParams.append("appId",o||"wallet"),s.searchParams.append("destinationWallets",JSON.stringify(e)),s.searchParams.append("paymentMethodsSupported",JSON.stringify(t)),s.searchParams.append("presetFiatAmount",a),r&&s.searchParams.append("defaultNetwork",r),s.toString()}},186732:(e,t,n)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getSource=void 0;const a=n(990656),o=n(395545);t.getSource=function(){switch((0,a.getPlatformName)()){case o.PlatformName.extension:case o.PlatformName.web:return"extension";default:return"mobile"}}},485016:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.parseDestinationWallets=t.LegacyIdToBlockchainId=void 0;const n=["ETH","AVAX","SOL","MATIC","OP","BASE"];t.LegacyIdToBlockchainId={AVAX:"avalanche-c-chain",ETH:"ethereum",SOL:"solana",MATIC:"polygon",OP:"optimism",BTC:"bitcoin",LTC:"litecoin",DOGE:"dogecoin",BASE:"base"},t.parseDestinationWallets=function({destinationWallets:e,tokenId:a,additionalSupportedBlockchainIds:o}){const r=[...n];if("ETH"===a){const t=e.find((e=>e.blockchains.includes("ETH")));if(!t)return;return[{address:t.address,assets:["ETH"]}]}return o&&r.push(...o),e.map((e=>({address:e.address,blockchains:e.blockchains.filter((e=>r.includes(e)))}))).filter((e=>0!==e.blockchains.length)).map((e=>({address:e.address,blockchains:e.blockchains.map((e=>t.LegacyIdToBlockchainId[e]))})))}}}]);
//# sourceMappingURL=7294.js.map